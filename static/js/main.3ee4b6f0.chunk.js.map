{"version":3,"sources":["ImageGalleryItem.js","ImageGallery.js","SearchBar.js","Spinner.js","Modal.js","Button.js","App.js","index.js"],"names":["ImageGalleryItem","id","webformatURL","largeImageURL","onClick","className","src","alt","source","width","ImageGallery","images","map","SearchBar","state","inputValue","handleChange","e","value","target","setState","handleSubmit","preventDefault","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Spinner","color","height","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","children","Button","APIkey","App","query","page","loading","largeImageUrl","getLargeURL","url","console","log","closeModal","fetchImages","fetch","then","response","json","data","hits","prevState","catch","err","finally","handleFormSubmit","text","prevProps","prevQuery","nextQuery","preImgArr","currentImgArr","length","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ee4b6f0.chunk.js","sourcesContent":["import React  from 'react';\r\nimport './ImageItem.css';\r\n\r\nexport default function ImageGalleryItem({id,webformatURL,largeImageURL,onClick}){\r\n  return (\r\n  <li className=\"ImageGalleryItem\" key={id}>\r\n    <img src={webformatURL} alt=\"Picutre from API\"\r\n    className=\"ImageGalleryItem-image\"\r\n    source = {largeImageURL}\r\n    onClick={onClick}\r\n    width=\"300\" />\r\n  </li> )\r\n}","import React  from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nexport default function ImageGallery({images, onClick}){\r\n  return (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({id,webformatURL,largeImageURL})=>(\r\n      <ImageGalleryItem key={id} webformatURL={webformatURL}\r\n      source = {largeImageURL}\r\n      onClick={()=>onClick(largeImageURL)}/>))}\r\n  </ul>)\r\n}","import React, {Component} from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport default class SearchBar extends Component{\r\n  state={\r\n    inputValue: \"\"\r\n  }\r\n\r\n  handleChange=e=>{\r\n    const{value} = e.target;\r\n    this.setState({inputValue: value})\r\n  };\r\n\r\n  handleSubmit=e=>{\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({inputValue: \"\"})\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.inputValue}\r\n          />\r\n      </form>\r\n</header>\r\n    )\r\n  }\r\n}\r\n","import React  from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './Spinner.css';\r\n\r\nexport default function Spinner(){\r\n  return (\r\n    <div className = \"Spinner\">\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends Component{\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n}","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default function Button({onClick}){\r\n  return (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">Load more</button>\r\n  )\r\n}","import React, {Component} from 'react';\nimport ImageGallery from './ImageGallery';\nimport SearchBar from './SearchBar';\nimport Spinner from './Spinner';\nimport Modal from './Modal.js';\nimport Button from './Button.js';\n\nimport './App.css';\n\nconst APIkey ='18551464-3b975953e71b3254d8a945600';\n\nexport default class App extends Component{\n\n  state={\n    images:[],\n    query:\"\",\n    page: 1,\n    loading: false,\n    largeImageUrl: null\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n\n    const preImgArr = prevState.images;\n    const currentImgArr = this.state.images;\n\n    if(prevQuery !== nextQuery) this.fetchImages(nextQuery);\n\n    if(preImgArr.length < currentImgArr.length) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  getLargeURL = url=>{\n    console.log('yes');\n    this.setState({largeImageUrl:url})\n  };\n\n  closeModal =()=>{\n    this.setState({largeImageUrl:null})\n  }\n\n  fetchImages=()=>{\n    const {query,page} = this.state;\n\n    this.setState({loading: true});\n\n    fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`)\n    .then(response=>response.json())\n    .then(data=>data.hits)\n    .then(images => {\n      this.setState(prevState=>({images: [...prevState.images,...images],\n        page: prevState.page+1}));\n    })\n    .catch(err=>console.log(err))\n    .finally(()=>this.setState({loading:false}))\n  };\n\n  handleFormSubmit=text=>{\n    this.setState({query:text, images:[],page:1})\n  };\n\n  render(){\n    const {images,loading, largeImageUrl} = this.state;\n    return (\n      <div>\n        <SearchBar onSubmit = {this.handleFormSubmit}/>\n\n        {images.length > 0 && (<ImageGallery images={images} onClick={this.getLargeURL}/>)}\n\n        {loading && <Spinner/>}\n\n        {images.length >0 && (\n          <Button onClick={this.fetchImages}/>\n        )}\n\n        {largeImageUrl && (\n          <Modal onClose={this.closeModal}>\n            <img src={largeImageUrl} alt=\"large\"/>\n          </Modal>)}\n\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}